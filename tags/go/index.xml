<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Jager&#39;s Note</title>
    <link>https://jageros.github.io/note/tags/go/</link>
    <description>Recent content in go on Jager&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 22 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jageros.github.io/note/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IM系统架构学习文献</title>
      <link>https://jageros.github.io/note/docs/imsys/material/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/imsys/material/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;来自IM即使通信网的一些IM系统架构学习的博客&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>viper配置示例</title>
      <link>https://jageros.github.io/note/docs/golang/viper/</link>
      <pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/viper/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;github.com/spf13/viper&amp;quot;是一个支持读取toml，yaml， ini， json，hcl等格式配置文件的golang库，
本文通过使用该库配合&amp;quot;github.com/spf13/pflag&amp;quot;和&amp;quot;github.com/fsnotify/fsnotify&amp;quot;库实现从配置文件和启动参数对服务进行配置，
并实现监听配置文件的实时改动，从而可实现不停服更新配置&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>go第三方库列表</title>
      <link>https://jageros.github.io/note/docs/golang/go-pkg/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/go-pkg/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;go服务端开发中避免不了使用第三方库，因为第三方库可以避免重复造轮子，大大的提高了开发效率，
这篇文章收集了各种有意思的go语言第三方库，方便开发需要时查找&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>channel注意事项</title>
      <link>https://jageros.github.io/note/docs/golang/channel/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/channel/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;channel是go语言编程中必不可少的元素，但对不同状态的channel作read，write和close操作会有不同的结果，
稍有操作不当，将导致系统 panic，所以本文介绍了channel不同状态的操作结果&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>golang sync包的使用</title>
      <link>https://jageros.github.io/note/docs/golang/sync/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/sync/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;go sync 包在go语言并发编程中必不可少，本文介绍go sync包中各个接口的使用方法以及示例&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>go服务端开发学习指南</title>
      <link>https://jageros.github.io/note/docs/golang/study-line/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/study-line/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文介绍基于go语言的服务端程序开发学习指南，根据列举的知识点自行学习，所列知识点都是开发基础必备技术栈。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>go程序优雅退出</title>
      <link>https://jageros.github.io/note/docs/golang/grace-exit/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/grace-exit/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;服务端程序是持续不断运行的，在停服时就需要等待各种服务关闭后再退出程序，
本文将介绍go程序优雅退出目前比较推荐的一种实现方式&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>go程序发布监听事件库</title>
      <link>https://jageros.github.io/note/docs/golang/eventhub/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/eventhub/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这是一个开源的用于golang程序内部发布和监听事件的package，
其原理是通过定义一个全局变量存储监听的事件id和对应的handle函数，
当发布事件时，通过事件id查找对应的handle，如果找到则执行该handle函数。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>queue golang实现</title>
      <link>https://jageros.github.io/note/docs/golang/queue/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/golang/queue/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文介绍go语言&lt;code&gt;gopkg.in/eapache/queue&lt;/code&gt;包的原理，代码解析以及使用方法&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>生成x个随机数</title>
      <link>https://jageros.github.io/note/docs/algorithm/random-n-int/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/algorithm/random-n-int/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;需求：生成x个随机数，要求这个x个随机数的和为y， 且随机数的最大值小于平均数的3倍，最小值大于0，例如：5个和为10的随机数避免出现6，1，1，1，1的情况。
【使用场景：游戏中卡牌包开包时随机出现卡牌质量的分布】&lt;br&gt;
本文展示go语言对该算法的实现&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes服务部署步骤</title>
      <link>https://jageros.github.io/note/docs/kubernetes/kubernetes-setup/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jageros.github.io/note/docs/kubernetes/kubernetes-setup/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;kubernetes，简称K8s，是用8代替8个字符“ubernete”而成的缩写。
是一个开源的，用于管理云平台中多个主机上的容器化的应用，
Kubernetes的目标是让部署容器化的应用简单并且高效（powerful）,
Kubernetes提供了应用部署，规划，更新，维护的一种机制。
本文将介绍Kubernetes集群的部署步骤&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
